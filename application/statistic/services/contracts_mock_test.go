// Code generated by MockGen. DO NOT EDIT.
// Source: ./contracts.go

// Package services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/valerii-smirnov/flex-made-query-analizer/application/statistic/repositories/models"
)

// MockStatisticRepository is a mock of StatisticRepository interface.
type MockStatisticRepository struct {
	ctrl     *gomock.Controller
	recorder *MockStatisticRepositoryMockRecorder
}

// MockStatisticRepositoryMockRecorder is the mock recorder for MockStatisticRepository.
type MockStatisticRepositoryMockRecorder struct {
	mock *MockStatisticRepository
}

// NewMockStatisticRepository creates a new mock instance.
func NewMockStatisticRepository(ctrl *gomock.Controller) *MockStatisticRepository {
	mock := &MockStatisticRepository{ctrl: ctrl}
	mock.recorder = &MockStatisticRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatisticRepository) EXPECT() *MockStatisticRepositoryMockRecorder {
	return m.recorder
}

// GetStatistic mocks base method.
func (m *MockStatisticRepository) GetStatistic(ctx context.Context, filter models.GetStatisticFilter) (models.GetStatisticResultCollection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatistic", ctx, filter)
	ret0, _ := ret[0].(models.GetStatisticResultCollection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatistic indicates an expected call of GetStatistic.
func (mr *MockStatisticRepositoryMockRecorder) GetStatistic(ctx, filter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatistic", reflect.TypeOf((*MockStatisticRepository)(nil).GetStatistic), ctx, filter)
}
